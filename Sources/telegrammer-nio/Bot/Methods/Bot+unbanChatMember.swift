// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.


import HTTP

public extension Bot {

    /// Use this method to unban a previously kicked user in a supergroup or channel. The user will not return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. Returns True on success.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target group or username of the target supergroup or channel (in the format @username)
    ///     - user_id: Unique identifier of the target user
    /// - Returns: Future<Bool>. Throws on errors.
    /// - Note: Asynchronous method.
    ///
    /// [- SeeAlso: ]<https://core.telegram.org/bots/api#unbanchatmember>

    public struct UnbanChatMemberParams: JSONEncodable {
        var chatId: ChatId
        var userId: Int64

        enum CodingKeys: String, CodingKey {
            case chatId = "chat_id"
            case userId = "user_id"
        }

        public init(chatId: ChatId, userId: Int64) {
            self.chatId = chatId
            self.userId = userId
        }
    }

    public func unbanChatMember(params: UnbanChatMemberParams) throws -> Future<Bool> {
        let body = try httpBody(for: params)
        let headers = try httpHeaders(for: params)
        let response: Future<TelegramContainer<Bool>>
        response = try client.respond(endpoint: "unbanChatMember", body: body, headers: headers)
        return response.flatMap(to: Bool.self) { try self.wrap($0) }
    }
}
