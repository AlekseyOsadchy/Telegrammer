// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.


import HTTP

public extension Bot {

    /// Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)
    ///     - sticker_set_name: Name of the sticker set to be set as the group sticker set
    /// - Returns: Future<Bool>. Throws on errors.
    /// - Note: Asynchronous method.
    ///
    /// [- SeeAlso: ]<https://core.telegram.org/bots/api#setchatstickerset>

    public struct SetChatStickerSetParams: JSONEncodable {
        var chatId: ChatId
        var stickerSetName: String

        enum CodingKeys: String, CodingKey {
            case chatId = "chat_id"
            case stickerSetName = "sticker_set_name"
        }

        public init(chatId: ChatId, stickerSetName: String) {
            self.chatId = chatId
            self.stickerSetName = stickerSetName
        }
    }

    @discardableResult
    public func setChatStickerSet(params: SetChatStickerSetParams) throws -> Future<Bool> {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        let response: Future<TelegramContainer<Bool>>
        response = try client.respond(endpoint: "setChatStickerSet", body: body, headers: headers)
        return response.flatMap(to: Bool.self) { try self.wrap($0) }
    }
}
